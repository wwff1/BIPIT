//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab_4_CSharp.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertMethod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertMethod(string id_Client, string id_Bus, string date, string cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertMethod", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertMethodAsync(string id_Client, string id_Bus, string date, string cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetData(string dateFirst, string dateSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDataAsync(string dateFirst, string dateSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRec", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteRec(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRec", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteRecAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientSelectData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetClientSelectData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientSelectData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetClientSelectDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBusSelectData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetBusSelectData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBusSelectData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetBusSelectDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RecCheck(string id_Client, string id_Bus, string date, string cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RecCheckAsync(string id_Client, string id_Bus, string date, string cost);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : Lab_4_CSharp.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<Lab_4_CSharp.ServiceReference1.WebService1Soap>, Lab_4_CSharp.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string InsertMethod(string id_Client, string id_Bus, string date, string cost) {
            return base.Channel.InsertMethod(id_Client, id_Bus, date, cost);
        }
        
        public System.Threading.Tasks.Task<string> InsertMethodAsync(string id_Client, string id_Bus, string date, string cost) {
            return base.Channel.InsertMethodAsync(id_Client, id_Bus, date, cost);
        }
        
        public System.Data.DataTable GetData(string dateFirst, string dateSecond) {
            return base.Channel.GetData(dateFirst, dateSecond);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDataAsync(string dateFirst, string dateSecond) {
            return base.Channel.GetDataAsync(dateFirst, dateSecond);
        }
        
        public string DeleteRec(int id) {
            return base.Channel.DeleteRec(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRecAsync(int id) {
            return base.Channel.DeleteRecAsync(id);
        }
        
        public System.Data.DataTable GetClientSelectData() {
            return base.Channel.GetClientSelectData();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetClientSelectDataAsync() {
            return base.Channel.GetClientSelectDataAsync();
        }
        
        public System.Data.DataTable GetBusSelectData() {
            return base.Channel.GetBusSelectData();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetBusSelectDataAsync() {
            return base.Channel.GetBusSelectDataAsync();
        }
        
        public string RecCheck(string id_Client, string id_Bus, string date, string cost) {
            return base.Channel.RecCheck(id_Client, id_Bus, date, cost);
        }
        
        public System.Threading.Tasks.Task<string> RecCheckAsync(string id_Client, string id_Bus, string date, string cost) {
            return base.Channel.RecCheckAsync(id_Client, id_Bus, date, cost);
        }
    }
}
