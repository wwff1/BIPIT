//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BipitKr.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequests", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRequestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRequests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddRequests(System.DateTime date, string author, string problem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRequests", ReplyAction="*")]
        System.Threading.Tasks.Task AddRequestsAsync(System.DateTime date, string author, string problem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateRequests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateRequests(System.DateTime date, string author, string problem, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateRequests", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateRequestsAsync(System.DateTime date, string author, string problem, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRequests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteRequests(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRequests", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteRequestsAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : BipitKr.ServiceReference1.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<BipitKr.ServiceReference1.ServiceSoap>, BipitKr.ServiceReference1.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetRequests() {
            return base.Channel.GetRequests();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRequestsAsync() {
            return base.Channel.GetRequestsAsync();
        }
        
        public void AddRequests(System.DateTime date, string author, string problem) {
            base.Channel.AddRequests(date, author, problem);
        }
        
        public System.Threading.Tasks.Task AddRequestsAsync(System.DateTime date, string author, string problem) {
            return base.Channel.AddRequestsAsync(date, author, problem);
        }
        
        public void UpdateRequests(System.DateTime date, string author, string problem, int id) {
            base.Channel.UpdateRequests(date, author, problem, id);
        }
        
        public System.Threading.Tasks.Task UpdateRequestsAsync(System.DateTime date, string author, string problem, int id) {
            return base.Channel.UpdateRequestsAsync(date, author, problem, id);
        }
        
        public void DeleteRequests(int id) {
            base.Channel.DeleteRequests(id);
        }
        
        public System.Threading.Tasks.Task DeleteRequestsAsync(int id) {
            return base.Channel.DeleteRequestsAsync(id);
        }
    }
}
